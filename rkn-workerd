#!/bin/bash
### BEGIN INIT INFO
# Provides: rkn-worker
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: 
### END INIT INFO

name=rkn-worker
discription='rkn-worker'
script=worker.py
pidfile=/run/worker.pid
dir=/opt/RKN
lock=/var/lock/$name
log=$dir/logger.conf

status() {
	if [ -f $pidfile ]
	then
		ps axf | grep `cat $pidfile` | grep -v 'grep'
	fi
}

is_worked() {
	if [ -f $lock ] 
	then
		if [[ `status` != "" ]]
		then
			echo 1
		else
			rm $lock
		fi
	fi
}

case "$1" in
'start')
        cd $dir
	if [[ `is_worked` != "" ]] 
	then
		echo "IT's worked! Pid = `cat $pidfile`"
		exit 1
	fi
	./$script --start --log $log --iptables --bgp --dns --proxy &
	echo $! > $pidfile
	echo "Start done"
        ;;
'stop')
	if [[ `is_worked` != "" ]]
	then
		kill -10 `cat $pidfile`
		echo Try Stop
		while [[ `status` != "" ]]
		do
			sleep 1
		done
		echo Done!
	else
		echo "Daemon isn't started!"
	fi
        ;;
'restart')
        $0 stop
        $0 start
        ;;
'status')
        if [[ `status` == "" ]]
	then
		echo "Daemon isn't started!"
	else
		echo "IT's worked! Pid = `cat $pidfile`"
	fi
        ;;
'clear')
	cd $dir
	if [[ `is_worked` != "" ]] 
	then
		echo "NOT!!! IT's worked! Pid = `cat $pidfile`"
		exit 1
	fi
	./$script --clear --log $log
	;;
'check-dump')
	cd $dir; ./$script --err new
	;;
'full-restart')
	$0 stop
	$0 clear
	$0 start
	echo "Start done"
	;;
*)
        echo "Usage: $0 { start | stop | restart |  status | clear | check-dump | full-restart }"
        ;;
esac
exit 0